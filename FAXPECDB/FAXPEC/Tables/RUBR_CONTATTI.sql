CREATE TABLE [FAXPEC].[RUBR_CONTATTI] (
    [ID_CONTACT]      NUMERIC (10)   NOT NULL,
    [MAIL]            NVARCHAR (256) NULL,
    [FAX]             VARCHAR (50)   NULL,
    [TELEFONO]        VARCHAR (50)   NULL,
    [REF_ID_REFERRAL] NUMERIC (10)   NOT NULL,
    [SOURCE]          NVARCHAR (50)  NULL,
    [FLG_IPA]         VARCHAR (1)    NOT NULL,
    [IPA_DN]          NVARCHAR (200) NULL,
    [IPA_ID]          VARCHAR (30)   NULL,
    [NOTE]            NVARCHAR (200) NULL,
    [CONTACT_REF]     NVARCHAR (200) NULL,
    [AFF_IPA]         NUMERIC (3)    NULL,
    [FLG_PEC]         NUMERIC (1)    NOT NULL,
    [MAIL_DOMAIN]     VARCHAR (100)  NULL,
    [REF_PROT]        VARCHAR (50)   NULL,
    CONSTRAINT [RUBR_CONTATTI_PK] PRIMARY KEY CLUSTERED ([ID_CONTACT] ASC),
    FOREIGN KEY ([REF_ID_REFERRAL]) REFERENCES [FAXPEC].[RUBR_ENTITA] ([ID_REFERRAL])
);


GO

CREATE TRIGGER [FAXPEC].[InsteadOfInsertOn$RUBR_CONTATTI]
   ON [FAXPEC].[RUBR_CONTATTI]
    INSTEAD OF INSERT
      AS 
         /*Generated by SQL Server Migration Assistant for Oracle version 7.3.0.*/
         BEGIN

            SET  NOCOUNT  ON

            DECLARE
               @triggerType char(1)

            SELECT @triggerType = 'I'

            /* column variables declaration*/
            DECLARE          
               @new$ID_CONTACT numeric(10, 0), 
               @new$MAIL nvarchar(256), 
               @new$FAX varchar(50), 
               @new$TELEFONO varchar(50), 
               @new$REF_ID_REFERRAL numeric(10, 0), 
               @new$SOURCE nvarchar(50), 
               @new$FLG_IPA varchar(1), 
               @new$IPA_DN nvarchar(200), 
               @new$IPA_ID varchar(30), 
               @new$NOTE nvarchar(200), 
               @new$CONTACT_REF nvarchar(200), 
               @new$AFF_IPA numeric(3, 0), 
               @new$FLG_PEC numeric(1, 0), 
               @new$MAIL_DOMAIN varchar(100), 
               @new$REF_PROT varchar(50)

            DECLARE
                ForEachInsertedRowTriggerCursor CURSOR LOCAL FORWARD_ONLY READ_ONLY FOR 
                  SELECT                     
                     ID_CONTACT, 
                     MAIL, 
                     FAX, 
                     TELEFONO, 
                     REF_ID_REFERRAL, 
                     SOURCE, 
                     FLG_IPA, 
                     IPA_DN, 
                     IPA_ID, 
                     NOTE, 
                     CONTACT_REF, 
                     AFF_IPA, 
                     FLG_PEC, 
                     MAIL_DOMAIN, 
                     REF_PROT
                  FROM inserted

            OPEN ForEachInsertedRowTriggerCursor

            FETCH ForEachInsertedRowTriggerCursor
                INTO                
                  @new$ID_CONTACT, 
                  @new$MAIL, 
                  @new$FAX, 
                  @new$TELEFONO, 
                  @new$REF_ID_REFERRAL, 
                  @new$SOURCE, 
                  @new$FLG_IPA, 
                  @new$IPA_DN, 
                  @new$IPA_ID, 
                  @new$NOTE, 
                  @new$CONTACT_REF, 
                  @new$AFF_IPA, 
                  @new$FLG_PEC, 
                  @new$MAIL_DOMAIN, 
                  @new$REF_PROT

            WHILE @@fetch_status = 0
            
               BEGIN

                  /* row-level triggers implementation: begin*/
                  BEGIN

                     IF (UPDATE(MAIL))
                        BEGIN
                           SET @new$MAIL_DOMAIN = ssma_oracle.substr2_nvarchar(@new$MAIL, ssma_oracle.instr2_nvarchar(@new$MAIL, '@') + 1)
                        END

                     BEGIN
                        IF @triggerType = 'I'
                           BEGIN                             
                                 SELECT @new$ID_CONTACT = NEXT VALUE FOR FAXPEC.RUBR_CONTATTI_SEQ
                           END
                     END

                     IF (UPDATE(REF_PROT))
                        BEGIN

                           DECLARE
                              /*
                              *   SSMA warning messages:
                              *   O2SS0356: Conversion from NUMBER datatype can cause data loss.
                              */

                              @cnt float(53), 
                              @no_prot_code_defined$exception nvarchar(1000)

                           SET @no_prot_code_defined$exception = N'ORA-20000%'

                           IF @new$REF_PROT IS NOT NULL
                              BEGIN

                                 SELECT @cnt = count_big(*)
                                 FROM FAXPEC.RUBR_MAPPING_PROTOCOLLO
                                 WHERE (RUBR_MAPPING_PROTOCOLLO.COD_APPL + RUBR_MAPPING_PROTOCOLLO.COD_ID) = @new$REF_PROT

                                 IF @cnt != 1
                                    BEGIN

                                       DECLARE
                                          @db_raise_application_error_message nvarchar(4000)

                                       SET @db_raise_application_error_message = N'ORA' + CAST(-20000 AS nvarchar) + N': ' + N'Codice protocollo non definito nella tabella "RUBR_MAPPING_PROTOCOLLO".'

                                       RAISERROR(59998, 16, 1, @db_raise_application_error_message)

                                    END

                              END

                        END

                  END
                  /* row-level triggers implementation: end*/

                  /* DML-operation emulation*/
                  INSERT FAXPEC.RUBR_CONTATTI(                   
                     ID_CONTACT, 
                     MAIL, 
                     FAX, 
                     TELEFONO, 
                     REF_ID_REFERRAL, 
                     SOURCE, 
                     FLG_IPA, 
                     IPA_DN, 
                     IPA_ID, 
                     NOTE, 
                     CONTACT_REF, 
                     AFF_IPA, 
                     FLG_PEC, 
                     MAIL_DOMAIN, 
                     REF_PROT)
                     VALUES (                     
                        @new$ID_CONTACT, 
                        @new$MAIL, 
                        @new$FAX, 
                        @new$TELEFONO, 
                        @new$REF_ID_REFERRAL, 
                        @new$SOURCE, 
                        @new$FLG_IPA, 
                        @new$IPA_DN, 
                        @new$IPA_ID, 
                        @new$NOTE, 
                        @new$CONTACT_REF, 
                        @new$AFF_IPA, 
                        @new$FLG_PEC, 
                        @new$MAIL_DOMAIN, 
                        @new$REF_PROT)

                  FETCH ForEachInsertedRowTriggerCursor
                      INTO                      
                        @new$ID_CONTACT, 
                        @new$MAIL, 
                        @new$FAX, 
                        @new$TELEFONO, 
                        @new$REF_ID_REFERRAL, 
                        @new$SOURCE, 
                        @new$FLG_IPA, 
                        @new$IPA_DN, 
                        @new$IPA_ID, 
                        @new$NOTE, 
                        @new$CONTACT_REF, 
                        @new$AFF_IPA, 
                        @new$FLG_PEC, 
                        @new$MAIL_DOMAIN, 
                        @new$REF_PROT

               END

            CLOSE ForEachInsertedRowTriggerCursor

            DEALLOCATE ForEachInsertedRowTriggerCursor

         END

GO

CREATE TRIGGER [FAXPEC].[InsteadOfUpdateOn$RUBR_CONTATTI]
   ON [FAXPEC].[RUBR_CONTATTI]
    INSTEAD OF UPDATE
      AS 
         /*Generated by SQL Server Migration Assistant for Oracle version 7.3.0.*/
         BEGIN

            SET  NOCOUNT  ON

            /* column variables declaration*/
            DECLARE         
               @new$ID_CONTACT numeric(10, 0), 
               @new$MAIL nvarchar(256), 
               @new$FAX varchar(50), 
               @new$TELEFONO varchar(50), 
               @new$REF_ID_REFERRAL numeric(10, 0), 
               @new$SOURCE nvarchar(50), 
               @new$FLG_IPA varchar(1), 
               @new$IPA_DN nvarchar(200), 
               @new$IPA_ID varchar(30), 
               @new$NOTE nvarchar(200), 
               @new$CONTACT_REF nvarchar(200), 
               @new$AFF_IPA numeric(3, 0), 
               @new$FLG_PEC numeric(1, 0), 
               @new$MAIL_DOMAIN varchar(100), 
               @new$REF_PROT varchar(50)

            DECLARE
                ForEachInsertedRowTriggerCursor CURSOR LOCAL FORWARD_ONLY READ_ONLY FOR 
                  SELECT                 
                     ID_CONTACT, 
                     MAIL, 
                     FAX, 
                     TELEFONO, 
                     REF_ID_REFERRAL, 
                     SOURCE, 
                     FLG_IPA, 
                     IPA_DN, 
                     IPA_ID, 
                     NOTE, 
                     CONTACT_REF, 
                     AFF_IPA, 
                     FLG_PEC, 
                     MAIL_DOMAIN, 
                     REF_PROT
                  FROM inserted

            OPEN ForEachInsertedRowTriggerCursor

            FETCH ForEachInsertedRowTriggerCursor
                INTO                 
                  @new$ID_CONTACT, 
                  @new$MAIL, 
                  @new$FAX, 
                  @new$TELEFONO, 
                  @new$REF_ID_REFERRAL, 
                  @new$SOURCE, 
                  @new$FLG_IPA, 
                  @new$IPA_DN, 
                  @new$IPA_ID, 
                  @new$NOTE, 
                  @new$CONTACT_REF, 
                  @new$AFF_IPA, 
                  @new$FLG_PEC, 
                  @new$MAIL_DOMAIN, 
                  @new$REF_PROT

            WHILE @@fetch_status = 0
            
               BEGIN

                  /* row-level triggers implementation: begin*/
                  BEGIN

                     IF (UPDATE(MAIL))
                        BEGIN
                           SET @new$MAIL_DOMAIN = ssma_oracle.substr2_nvarchar(@new$MAIL, ssma_oracle.instr2_nvarchar(@new$MAIL, '@') + 1)
                        END

                     IF (UPDATE(REF_PROT))
                        BEGIN

                           DECLARE
                              /*
                              *   SSMA warning messages:
                              *   O2SS0356: Conversion from NUMBER datatype can cause data loss.
                              */

                              @cnt float(53), 
                              @no_prot_code_defined$exception nvarchar(1000)

                           SET @no_prot_code_defined$exception = N'ORA-20000%'

                           IF @new$REF_PROT IS NOT NULL
                              BEGIN

                                 SELECT @cnt = count_big(*)
                                 FROM FAXPEC.RUBR_MAPPING_PROTOCOLLO
                                 WHERE (RUBR_MAPPING_PROTOCOLLO.COD_APPL + RUBR_MAPPING_PROTOCOLLO.COD_ID) = @new$REF_PROT

                                 IF @cnt != 1
                                    BEGIN

                                       DECLARE
                                          @db_raise_application_error_message nvarchar(4000)

                                       SET @db_raise_application_error_message = N'ORA' + CAST(-20000 AS nvarchar) + N': ' + N'Codice protocollo non definito nella tabella "RUBR_MAPPING_PROTOCOLLO".'

                                       RAISERROR(59998, 16, 1, @db_raise_application_error_message)

                                    END

                              END

                        END

                  END
                  /* row-level triggers implementation: end*/

                  /* DML-operation emulation*/
                  UPDATE FAXPEC.RUBR_CONTATTI
                     SET                      
                        MAIL = @new$MAIL, 
                        FAX = @new$FAX, 
                        TELEFONO = @new$TELEFONO, 
                        REF_ID_REFERRAL = @new$REF_ID_REFERRAL, 
                        SOURCE = @new$SOURCE, 
                        FLG_IPA = @new$FLG_IPA, 
                        IPA_DN = @new$IPA_DN, 
                        IPA_ID = @new$IPA_ID, 
                        NOTE = @new$NOTE, 
                        CONTACT_REF = @new$CONTACT_REF, 
                        AFF_IPA = @new$AFF_IPA, 
                        FLG_PEC = @new$FLG_PEC, 
                        MAIL_DOMAIN = @new$MAIL_DOMAIN, 
                        REF_PROT = @new$REF_PROT
                  WHERE ID_CONTACT = @new$ID_CONTACT

                  FETCH ForEachInsertedRowTriggerCursor
                      INTO                    
                        @new$ID_CONTACT, 
                        @new$MAIL, 
                        @new$FAX, 
                        @new$TELEFONO, 
                        @new$REF_ID_REFERRAL, 
                        @new$SOURCE, 
                        @new$FLG_IPA, 
                        @new$IPA_DN, 
                        @new$IPA_ID, 
                        @new$NOTE, 
                        @new$CONTACT_REF, 
                        @new$AFF_IPA, 
                        @new$FLG_PEC, 
                        @new$MAIL_DOMAIN, 
                        @new$REF_PROT

               END

            CLOSE ForEachInsertedRowTriggerCursor

            DEALLOCATE ForEachInsertedRowTriggerCursor

         END

GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.ID_CONTACT', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'ID_CONTACT';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.MAIL', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'MAIL';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.FAX', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'FAX';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.TELEFONO', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'TELEFONO';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.REF_ID_REFERRAL', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'REF_ID_REFERRAL';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.SOURCE', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'SOURCE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.FLG_IPA', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'FLG_IPA';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.IPA_DN', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'IPA_DN';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.IPA_ID', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'IPA_ID';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.NOTE', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'NOTE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.CONTACT_REF', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'CONTACT_REF';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.AFF_IPA', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'AFF_IPA';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.FLG_PEC', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'FLG_PEC';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.MAIL_DOMAIN', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'MAIL_DOMAIN';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.REF_PROT', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'COLUMN', @level2name = N'REF_PROT';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_CONTATTI.RUBR_CONTATTI_PK', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_CONTATTI', @level2type = N'CONSTRAINT', @level2name = N'RUBR_CONTATTI_PK';

