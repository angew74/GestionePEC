CREATE TABLE [FAXPEC].[RUBR_BACKEND] (
    [ID_BACKEND]    NUMERIC (10)   NOT NULL,
    [BACKEND_CODE]  VARCHAR (15)   NOT NULL,
    [BACKEND_DESCR] NVARCHAR (100) NULL,
    [CATEGORY]      VARCHAR (40)   NULL,
    [DESCR_PLUS]    VARCHAR (10)   NULL,
    CONSTRAINT [RUBR_BACKEND_PK] PRIMARY KEY CLUSTERED ([ID_BACKEND] ASC)
);


GO

CREATE TRIGGER [FAXPEC].[InsteadOfInsertOn$RUBR_BACKEND]
   ON [FAXPEC].[RUBR_BACKEND]
    INSTEAD OF INSERT
      AS 
         /*Generated by SQL Server Migration Assistant for Oracle version 7.3.0.*/
         BEGIN

            SET  NOCOUNT  ON

            DECLARE
               @triggerType char(1)

            SELECT @triggerType = 'I'

            /* column variables declaration*/
            DECLARE            
               @new$ID_BACKEND numeric(10, 0), 
               @new$BACKEND_CODE varchar(15), 
               @new$BACKEND_DESCR nvarchar(100), 
               @new$CATEGORY varchar(40), 
               @new$DESCR_PLUS varchar(10)

            DECLARE
                ForEachInsertedRowTriggerCursor CURSOR LOCAL FORWARD_ONLY READ_ONLY FOR 
                  SELECT                     
                     ID_BACKEND, 
                     BACKEND_CODE, 
                     BACKEND_DESCR, 
                     CATEGORY, 
                     DESCR_PLUS
                  FROM inserted

            OPEN ForEachInsertedRowTriggerCursor

            FETCH ForEachInsertedRowTriggerCursor
                INTO                 
                  @new$ID_BACKEND, 
                  @new$BACKEND_CODE, 
                  @new$BACKEND_DESCR, 
                  @new$CATEGORY, 
                  @new$DESCR_PLUS

            WHILE @@fetch_status = 0
            
               BEGIN

                  /* row-level triggers implementation: begin*/
                  BEGIN
                     BEGIN
                        IF @triggerType = 'I'
                           BEGIN                          
                                 SELECT @new$ID_BACKEND = NEXT VALUE FOR FAXPEC.RUBR_BACKEND_SEQ
                           END
                     END
                  END
                  /* row-level triggers implementation: end*/

                  /* DML-operation emulation*/
                  INSERT FAXPEC.RUBR_BACKEND(                     
                     ID_BACKEND, 
                     BACKEND_CODE, 
                     BACKEND_DESCR, 
                     CATEGORY, 
                     DESCR_PLUS)
                     VALUES (                       
                        @new$ID_BACKEND, 
                        @new$BACKEND_CODE, 
                        @new$BACKEND_DESCR, 
                        @new$CATEGORY, 
                        @new$DESCR_PLUS)

                  FETCH ForEachInsertedRowTriggerCursor
                      INTO                      
                        @new$ID_BACKEND, 
                        @new$BACKEND_CODE, 
                        @new$BACKEND_DESCR, 
                        @new$CATEGORY, 
                        @new$DESCR_PLUS

               END

            CLOSE ForEachInsertedRowTriggerCursor

            DEALLOCATE ForEachInsertedRowTriggerCursor

         END

GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.ID_BACKEND', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'COLUMN', @level2name = N'ID_BACKEND';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.BACKEND_CODE', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'COLUMN', @level2name = N'BACKEND_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.BACKEND_DESCR', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'COLUMN', @level2name = N'BACKEND_DESCR';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.CATEGORY', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'COLUMN', @level2name = N'CATEGORY';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.DESCR_PLUS', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'COLUMN', @level2name = N'DESCR_PLUS';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_BACKEND.RUBR_BACKEND_PK', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_BACKEND', @level2type = N'CONSTRAINT', @level2name = N'RUBR_BACKEND_PK';

