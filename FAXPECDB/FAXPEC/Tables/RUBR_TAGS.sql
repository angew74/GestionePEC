CREATE TABLE [FAXPEC].[RUBR_TAGS] (
    [ID_TAG] NUMERIC (10)  NOT NULL,
    [TAG]    NVARCHAR (50) NOT NULL,
    CONSTRAINT [RUBR_TAGS_PK] PRIMARY KEY CLUSTERED ([ID_TAG] ASC)
);


GO

CREATE TRIGGER [FAXPEC].[InsteadOfInsertOn$RUBR_TAGS]
   ON [FAXPEC].[RUBR_TAGS]
    INSTEAD OF INSERT
      AS 
         /*Generated by SQL Server Migration Assistant for Oracle version 7.3.0.*/
         BEGIN

            SET  NOCOUNT  ON

            DECLARE
               @triggerType char(1)

            SELECT @triggerType = 'I'

            /* column variables declaration*/
            DECLARE              
               @new$ID_TAG numeric(10, 0), 
               @new$TAG nvarchar(50)

            DECLARE
                ForEachInsertedRowTriggerCursor CURSOR LOCAL FORWARD_ONLY READ_ONLY FOR 
                  SELECT ID_TAG, TAG
                  FROM inserted

            OPEN ForEachInsertedRowTriggerCursor

            FETCH ForEachInsertedRowTriggerCursor
                INTO @new$ID_TAG, @new$TAG

            WHILE @@fetch_status = 0
            
               BEGIN

                  /* row-level triggers implementation: begin*/
                  BEGIN
                     BEGIN
                        IF @triggerType = 'I'
                           BEGIN
                              IF @new$ID_TAG IS NULL
                                 SELECT @new$ID_TAG = NEXT VALUE FOR FAXPEC.RUBR_TAGS_SEQ
                           END
                     END
                  END
                  /* row-level triggers implementation: end*/

                  /* DML-operation emulation*/
                  INSERT FAXPEC.RUBR_TAGS(ID_TAG, TAG)
                     VALUES ( @new$ID_TAG, @new$TAG)

                  FETCH ForEachInsertedRowTriggerCursor
                      INTO @new$ID_TAG, @new$TAG

               END

            CLOSE ForEachInsertedRowTriggerCursor

            DEALLOCATE ForEachInsertedRowTriggerCursor

         END

GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_TAGS', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_TAGS';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_TAGS.ID_TAG', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_TAGS', @level2type = N'COLUMN', @level2name = N'ID_TAG';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_TAGS.TAG', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_TAGS', @level2type = N'COLUMN', @level2name = N'TAG';


GO
EXECUTE sp_addextendedproperty @name = N'MS_SSMA_SOURCE', @value = N'FAXPEC.RUBR_TAGS.RUBR_TAGS_PK', @level0type = N'SCHEMA', @level0name = N'FAXPEC', @level1type = N'TABLE', @level1name = N'RUBR_TAGS', @level2type = N'CONSTRAINT', @level2name = N'RUBR_TAGS_PK';

